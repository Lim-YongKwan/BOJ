#include<iostream>
#define endl "\n"
using namespace std;

int cat_food[1001];

int main() {

	int N;
	cin >> N;

	int max = 0;
	long long total = 0;

	for (int i = 0; i < N; i++) {
		cin >> cat_food[i];
	}

	/*
	1. 1
	2. 2
	3. 4
	4. 5
	5. 3
	6. 4
	7. 5

	1번부터 순서대로 더해보자.
	하지만 이러다가 max값과 그 전의 max값 그리고 그 차이를 기억해두자.
	위의 경우라면 4와 5 그리고 1이 나온다.

	우선 기억해 둘것!
	1일부터 n일까지의 최댓값은 n(n+1)/2 이다.
	즉 1개씩 커진다면 무조건 최댓값이다.
	즉 위의 경우라면 2까지는 더 이상 볼 필요가 없는 최댓값이다.
	하지만 3에 들어서는 순간 차이가 2가 생기게 된다.
	즉 이러한 차이가 생길때
	이전 max는 3 그리고 그 이후의 max값은 12가 된다.
	그리고 3은 2보다 크니까 더할수있고 그 상태로 계속 더하면 max값은 15가 된다.
	즉 min값으로 3을 dp[2]에 두고
	max_total 값을 9로 max값을 5로 가다가 5번에서 4번보다 작은 것을 발견햇으니 3부터 max까지의 도달할때까지 더하자.
	이럴때 max_total값이 더 커진다면 해당으로 바꾸자.
	
	문제. 2번 꼬인다면?

	1. 1
	2. 2 min 3
	3. 8
	4. 9 max 20
	5. 6 
	6. 7 max 20 vs max 16
	7. 3 max 6
	8. 4 max 10
	9. 5 max 15
	10. 6 max 21 이 순간 min 21으로 바뀐다.
	11. 7 max 28
	12. 8
	13. 9
	라면?
	그렇다면 
	4번까지의 맥스값과 5번과 6번을 더하고 계속되는 값과
	7번부터 계속 더해진 3가지의 경우가 생긴다.












*/


	cout << total << endl;


	return 0;
}